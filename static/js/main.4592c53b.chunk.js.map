{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","logo","backgroundImage","setBackgroundImage","inputValue","setInputValue","environmentValue","setEnvironmentValue","sources","setSources","process","api","ACCESS_KEY","SECRET_KEY","createApi","accessKey","loadBird","birdName","console","log","birdQuery","split","join","fetch","then","res","ok","json","Promise","reject","status","recordings","file","catch","err","error","className","map","sound","index","src","autoPlay","loop","onSubmit","evt","preventDefault","lat","long","zipcodes","lookup","latitude","longitude","headers","data","one","sciName","two","three","four","promises","all","values","query","imageIndex","Math","floor","random","search","getPhotos","orientation","result","response","results","urls","regular","loadImage","type","placeholder","onChange","target","value","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4592c53b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// import logo from './logo.svg';\nimport \"./App.css\";\nimport React from \"react\";\nimport zipcodes from \"zipcodes\";\nimport XenoCanto from \"xeno-canto\";\nimport { createApi } from \"unsplash-js\";\nimport logo from \"./logo.svg\";\n\n// import ebird from 'ebird'\n// import { findAllByLabelText } from '@testing-library/dom';\n// const ebird = require('ebird')\n\nfunction App() {\n  // const [birdQuery, setBirdQuery] = React.useState(\"06880\");\n  // const [birdData, setBirdData] = React.useState(\"Cool\");\n  // const [lat, setLat] = React.useState(\"\");\n  // const [long, setLong] = React.useState(\"\");\n  // const [firstBird, setFirstBird] = React.useState(\"bluejay\");\n  const [backgroundImage, setBackgroundImage] = React.useState(logo);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [environmentValue, setEnvironmentValue] = React.useState(\"\");\n  // const [backgroundImage, setBackgroundImage] = React.useState(\"\");\n  const [sources, setSources] = React.useState([]);\n  const [birdOne, setBirdOne] = React.useState(\"\");\n  const [birdTwo, setBirdTwo] = React.useState(\"\");\n  const [birdThree, setBirdThree] = React.useState(\"\");\n  const [birdFour, setBirdFour] = React.useState(\"\");\n  // const [birdOneSound, setBirdOneSound] = React.useState(\"\");\n  // const [birdTwoSound, setBirdTwoSound] = React.useState(\"\");\n  // const [birdThreeSound, setBirdThreeSound] = React.useState(\"\");\n  // const [birdFourSound, setBirdFourSound] = React.useState(\"\");\n  // const birdA = React.useRef();\n  // const birdB = React.useRef();\n  // const birdC = React.useRef();\n  // const birdD = React.useRef();\n  const { ACCESS_KEY, SECRET_KEY } = process.env;\n\n  // console.log(ACCESS_KEY);\n\n  const api = createApi({\n    // Don't forget to set your access token here!\n    // See https://unsplash.com/developers\n    accessKey: \"xjXfjbZXUyocjWtFmr8VkvF2ir1ee4omC5IYJCc1598\",\n  });\n\n  function loadBird(birdName) {\n    console.log(birdName);\n    const birdQuery = birdName.split(\" \").join(\"+\");\n    return fetch(`https://jsonp.afeld.me/?url=https://www.xeno-canto.org/api/2/recordings?query=${birdQuery}`)\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject(`${res.status} error!`);\n        }\n        return res.json();\n      })\n      .then((res) => {\n        // setSources(sources.push(res.recordings[0].file));\n        return res.recordings[0].file;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function loadImage(query) {\n    const imageIndex = Math.floor(Math.random() * 10);\n    api.search\n      .getPhotos({ query, orientation: \"landscape\" })\n      .then((result) => {\n        console.log(result);\n        setBackgroundImage(result.response.results[imageIndex].urls.regular);\n      })\n      .catch((error) => {\n        console.log(\"something went wrong!\", error);\n      });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    setSources([]);\n    const { latitude, longitude } = zipcodes.lookup(inputValue);\n    // setLat(latitude);\n    // setLong(longitude);\n    findBirds(latitude, longitude).then((promises) => {\n      Promise.all(promises).then((values) => {\n        console.log(values);\n        setSources(values);\n        loadImage(environmentValue);\n      });\n    });\n  }\n\n  function handleChange(evt) {\n    setInputValue(evt.target.value);\n  }\n  function handleEnvironmentChange(evt) {\n    setEnvironmentValue(evt.target.value);\n  }\n\n  function findBirds(lat, long) {\n    return fetch(`https://api.ebird.org/v2/data/obs/geo/recent?lat=${lat}&lng=${long}`, {\n      headers: {\n        \"x-ebirdapitoken\": \"mi4ei0kog2o9\",\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject(`${res.status} error!`);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log({ one: data[0].sciName, two: data[1].sciName, three: data[2].sciName, four: data[3].sciName });\n        // setBirdOne(data[0].sciName);\n        // setBirdTwo(data[1].sciName);\n        // setBirdThree(data[2].sciName);\n        // setBirdFour(data[3].sciName);\n        // const p1 = loadBird(birdOne);\n        // const p2 = loadBird(birdTwo);\n        // const p3 = loadBird(birdThree);\n        // const p4 = loadBird(birdFour);\n        const p1 = loadBird(data[0].sciName);\n        const p2 = loadBird(data[2].sciName);\n        const p3 = loadBird(data[4].sciName);\n        const p4 = loadBird(data[6].sciName);\n        return [p1, p2, p3, p4];\n\n        return \"cool\";\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n  // React.useEffect(() => {\n\n  // }, []);\n\n  // React.useEffect(() => {\n  //   return fetch(\n  //     `https://api.ebird.org/v2/data/obs/geo/recent?lat=${lat}&lng=${long}`,\n  //     {\n  //       headers: {\n  //         \"x-ebirdapitoken\": \"mi4ei0kog2o9\",\n  //       },\n  //     }\n  //   )\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (!res.ok) {\n  //         return Promise.reject(`${res.status} error!`);\n  //       }\n  //       return res.json();\n  //     })\n  //     .then((birds) => {\n  //       console.log(birds);\n  //       const birdName = birds[0].comName;\n  //       setFirstBird(birdName);\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     });\n  // }, [birdQuery, lat, long]);\n\n  return (\n    <div className=\"App\">\n      {sources.map((sound, index) => {\n        return <audio key={index} src={sound} autoPlay loop></audio>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Enter Zipcode\" onChange={handleChange} value={inputValue} />\n        <input type=\"text\" placeholder=\"Choose Environment\" onChange={handleEnvironmentChange} value={environmentValue} />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {/* <button onClick={loadBird}>BIRD TIME</button>\n      <button onClick={loadImage}>IMAGE TIME</button>\n      <button\n        onClick={() => {\n          loadBird();\n          loadImage();\n        }}\n      >\n        COMBO TIME\n      </button> */}\n      <img className=\"image\" src={backgroundImage} alt=\"background image\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}